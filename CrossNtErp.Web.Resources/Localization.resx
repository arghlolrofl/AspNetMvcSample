<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="German" xml:space="preserve">
    <value>German</value>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>Cross NT ERP</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorDuringRequest" xml:space="preserve">
    <value>An error occured while processing your request</value>
  </data>
  <data name="LockedOut" xml:space="preserve">
    <value>Locked out</value>
  </data>
  <data name="LockedOutMessage" xml:space="preserve">
    <value>This account has been locked out, please try again later</value>
  </data>
  <data name="RegisterAsNewUser" xml:space="preserve">
    <value>Register as a new user</value>
  </data>
  <data name="CreateNewAccount" xml:space="preserve">
    <value>Create a new account</value>
  </data>
  <data name="CreateNew" xml:space="preserve">
    <value>Create New</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="AccountRole" xml:space="preserve">
    <value>Account Role</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="BackToIndex" xml:space="preserve">
    <value>Back to index</value>
  </data>
  <data name="ListOfUsers" xml:space="preserve">
    <value>List of Users</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="AssignedRoles" xml:space="preserve">
    <value>Assigned Roles</value>
  </data>
  <data name="AvailableRoles" xml:space="preserve">
    <value>Available Roles</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="TaxRate" xml:space="preserve">
    <value>Tax Rate</value>
  </data>
  <data name="Overview" xml:space="preserve">
    <value>Overview</value>
  </data>
  <data name="ListOfCashJournals" xml:space="preserve">
    <value>List of Cash Journals</value>
  </data>
  <data name="CashJournal" xml:space="preserve">
    <value>Cash Journal</value>
  </data>
  <data name="CashJournals" xml:space="preserve">
    <value>Cash Journals</value>
  </data>
  <data name="CashJournalEntries" xml:space="preserve">
    <value>Cash Journal Entries</value>
  </data>
  <data name="CashJournalEntry" xml:space="preserve">
    <value>Cash Journal Entry</value>
  </data>
  <data name="Positions" xml:space="preserve">
    <value>Positions</value>
  </data>
  <data name="AddPosition" xml:space="preserve">
    <value>Add Position</value>
  </data>
  <data name="RemovePosition" xml:space="preserve">
    <value>Remove Position</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="P_Delta" xml:space="preserve">
    <value>Delta</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="ApplicationSubTitle" xml:space="preserve">
    <value>The modular cross-platform ERP solution.</value>
  </data>
  <data name="HomePage" xml:space="preserve">
    <value>Home Page</value>
  </data>
  <data name="TaxRates" xml:space="preserve">
    <value>Tax Rates</value>
  </data>
  <data name="ModuleOverview" xml:space="preserve">
    <value>Module Overview</value>
  </data>
  <data name="Modules_Finances" xml:space="preserve">
    <value>Finances</value>
  </data>
  <data name="Modules_Finances_Description" xml:space="preserve">
    <value>Finances Module content:</value>
  </data>
  <data name="Modules_Administration" xml:space="preserve">
    <value>Administration</value>
  </data>
  <data name="Modules_Administration_Description" xml:space="preserve">
    <value>Administration and Management:</value>
  </data>
  <data name="RolesManagement" xml:space="preserve">
    <value>Roles Management</value>
  </data>
  <data name="UserManagement" xml:space="preserve">
    <value>User Management</value>
  </data>
  <data name="Germany" xml:space="preserve">
    <value>Germany</value>
  </data>
  <data name="Abbreviation_Phone" xml:space="preserve">
    <value>P:</value>
  </data>
  <data name="Support" xml:space="preserve">
    <value>Support</value>
  </data>
  <data name="Marketing" xml:space="preserve">
    <value>Marketing</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="P_Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="V_Username_Required" xml:space="preserve">
    <value>Username must not be empty</value>
  </data>
  <data name="V_Username_Length" xml:space="preserve">
    <value>Username must be between 4 and 32 characters</value>
  </data>
  <data name="P_Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="V_Password_Length" xml:space="preserve">
    <value>Password must be between 4 and 32 characters</value>
  </data>
  <data name="V_Password_Required" xml:space="preserve">
    <value>Password must not be empty</value>
  </data>
  <data name="P_RememberMe" xml:space="preserve">
    <value>Remember me?</value>
  </data>
  <data name="P_Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="V_Email_Required" xml:space="preserve">
    <value>Email is required</value>
  </data>
  <data name="P_Password_Confirm" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="V_Password_Compare" xml:space="preserve">
    <value>Passwords do not match</value>
  </data>
  <data name="AccountRoles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="RoleNameExistsAlready" xml:space="preserve">
    <value>A role with that name exists already</value>
  </data>
  <data name="P_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="V_Name_Required" xml:space="preserve">
    <value>Name must not be empty</value>
  </data>
  <data name="V_Name_Length" xml:space="preserve">
    <value>Name must be less than 96 characters</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="P_PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="V_Category_Required" xml:space="preserve">
    <value>Category must not be empty</value>
  </data>
  <data name="V_Value_Required" xml:space="preserve">
    <value>Value must not be empty</value>
  </data>
  <data name="P_Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="V_Description_Length" xml:space="preserve">
    <value>Description must contain less than 255 characters</value>
  </data>
  <data name="V_Required" xml:space="preserve">
    <value>Must not be empty</value>
  </data>
  <data name="V_Length_Max_255" xml:space="preserve">
    <value>Must not contain more than 255 characters</value>
  </data>
  <data name="P_StartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="P_EndDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="P_CurrentBalance" xml:space="preserve">
    <value>Current Balance</value>
  </data>
  <data name="P_Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="P_DocumentName" xml:space="preserve">
    <value>Document Name</value>
  </data>
  <data name="P_ProcessDescription" xml:space="preserve">
    <value>Process Description</value>
  </data>
  <data name="P_CashBalance" xml:space="preserve">
    <value>Cash Balance</value>
  </data>
  <data name="Document" xml:space="preserve">
    <value>Document</value>
  </data>
  <data name="Delta" xml:space="preserve">
    <value>Delta</value>
  </data>
  <data name="HasDocumentAttached" xml:space="preserve">
    <value>Attach document</value>
  </data>
  <data name="NoTaxRateSelected" xml:space="preserve">
    <value>No selection</value>
  </data>
  <data name="MissingInputAsterisk" xml:space="preserve">
    <value>*</value>
  </data>
  <data name="V_MissingInput" xml:space="preserve">
    <value>Missing Input</value>
  </data>
  <data name="CurrencyPattern" xml:space="preserve">
    <value>^-?\d{1,3},(\d{3}[,]?)+?(\.\d{1,2})?$|^-?\d{1,}(\.\d{1,2})?$</value>
  </data>
  <data name="V_InvalidCurrencyFormat" xml:space="preserve">
    <value>Invalid currency format</value>
  </data>
  <data name="CurrencySymbol" xml:space="preserve">
    <value>$</value>
  </data>
  <data name="Module" xml:space="preserve">
    <value>Module</value>
  </data>
  <data name="PrePaidTax" xml:space="preserve">
    <value>PrePaid Tax</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="InvalidPercentageValue" xml:space="preserve">
    <value>No valid percentage value</value>
  </data>
  <data name="PercentageValue" xml:space="preserve">
    <value>Value %</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
</root>